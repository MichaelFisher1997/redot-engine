<?xml version="1.0" encoding="UTF-8" ?>
<class name="ResourceImporterAnimatedTexture" inherits="ResourceImporter" deprecated="[AnimatedTexture] is deprecated." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Imports an animated image for use in 2D rendering.
	</brief_description>
	<description>
		This importer imports [AnimatedTexture] resources. If you need to process the image in scripts in a more convenient way, use [ResourceImporterImageFrames] instead.
	</description>
	<tutorials>
	</tutorials>
	<members>
		<member name="process/fix_alpha_border" type="bool" setter="" getter="" default="true">
			If [code]true[/code], puts pixels of the same surrounding color in transition from transparent to opaque areas for all textures. For textures displayed with bilinear filtering, this helps to reduce the outline effect when exporting images from an image editor.
			It's recommended to leave this enabled (as it is by default), unless this causes issues for a particular animated image.
		</member>
		<member name="process/frame_limit" type="int" setter="" getter="" default="0">
			If set to a value greater than [code]0[/code], the frames to read is limited on import to a value smaller than or equal to the value specified here.
			This can be used to reduce memory usage at the cost of truncated animations.
		</member>
		<member name="process/hdr_as_srgb" type="bool" setter="" getter="" default="false">
			Some HDR images you can find online may be broken and contain sRGB color data (instead of linear color data). It is advised not to use those files. If you absolutely have to, enabling [member process/hdr_as_srgb] will make them look correct.
			[b]Warning:[/b] Enabling [member process/hdr_as_srgb] on well-formatted HDR images will cause the resulting image to look too dark, so leave this on [code]false[/code] if unsure.
		</member>
		<member name="process/premult_alpha" type="bool" setter="" getter="" default="false">
			An alternative to fixing darkened borders with [member process/fix_alpha_border] is to use premultiplied alpha. By enabling this option, all the textures will be converted to this format. A premultiplied alpha texture requires specific materials to be displayed correctly:
			A [CanvasItemMaterial] will need to be created and configured to use the [constant CanvasItemMaterial.BLEND_MODE_PREMULT_ALPHA] blend mode on [CanvasItem]s that use this texture. In custom [code]@canvas_item[/code] shaders, [code]render_mode blend_premul_alpha;[/code] should be used.
		</member>
		<member name="process/size_limit" type="int" setter="" getter="" default="0">
			If set to a value greater than [code]0[/code], the size of each individual texture is limited on import to a value smaller than or equal to the value specified here. For non-square textures, the size limit affects the longer dimension, with the shorter dimension scaled to preserve aspect ratio. Resizing is performed using cubic interpolation.
			This can be used to reduce memory usage without affecting the source images, or avoid issues with textures not displaying on mobile/web platforms (as these usually can't display textures larger than 4096Ã—4096).
		</member>
	</members>
</class>
