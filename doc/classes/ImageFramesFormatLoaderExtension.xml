<?xml version="1.0" encoding="UTF-8" ?>
<class name="ImageFramesFormatLoaderExtension" inherits="ImageFramesFormatLoader" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Base class for creating [ImageFramesFormatLoader] extensions (adding support for extra image sequence formats).
	</brief_description>
	<description>
		The engine supports multiple image sequence formats out of the box, but you can choose to implement support for additional image sequence formats by extending this class.
		Be sure to respect the documented return types and values. You should create an instance of it, and call [method add_format_loader] to register that loader during the initialization phase.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_get_recognized_extensions" qualifiers="virtual const">
			<return type="PackedStringArray" />
			<description>
			</description>
		</method>
		<method name="_load_image_frames" qualifiers="virtual">
			<return type="int" enum="Error" />
			<param index="0" name="image_frames" type="ImageFrames" />
			<param index="1" name="fileaccess" type="FileAccess" />
			<param index="2" name="flags" type="int" enum="ImageFramesFormatLoader.LoaderFlags" is_bitfield="true" />
			<param index="3" name="scale" type="float" />
			<param index="4" name="max_frames" type="int" />
			<description>
				Loads the content of [param fileaccess] into the provided [param image_frames].
			</description>
		</method>
		<method name="add_format_loader">
			<return type="void" />
			<description>
				Add this format loader to the engine, allowing it to recognize the file extensions returned by [method _get_recognized_extensions].
			</description>
		</method>
		<method name="remove_format_loader">
			<return type="void" />
			<description>
				Remove this format loader from the engine.
			</description>
		</method>
	</methods>
</class>
